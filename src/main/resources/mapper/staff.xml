<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.m.dao.StaffDao">
    <resultMap id="staffMap" type="com.m.model.Staff">
        <id column="staff_id" jdbcType="INTEGER" property="staffId" />
        <result column="staff_account" jdbcType="VARCHAR" property="staffAccount" />
        <result column="staff_password" jdbcType="VARCHAR" property="staffPassword" />
        <result column="staff_status" jdbcType="VARCHAR" property="staffStatus" />
        <result column="staff_name" jdbcType="VARCHAR" property="staffName" />
        <result column="staff_sex" jdbcType="INTEGER" property="staffSex" />
        <result column="staff_age" jdbcType="INTEGER" property="staffAge" />
        <result column="staff_power" jdbcType="INTEGER" property="staffPower" />
    </resultMap>

    <sql id="staff_column">
        staff_id, staff_account, staff_password, staff_name, staff_sex, staff_age, staff_status, staff_power
    </sql>

    <insert id="save" parameterType="com.m.model.Staff">
        insert into staff
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="staffAccount != null">
                staff_account,
            </if>
            <if test="staffPassword != null">
                staff_password,
            </if>
            <if test="staffStatus != null">
                staff_status,
            </if>
            <if test="staffName != null">
                staff_name,
            </if>
            <if test="staffSex != null">
                staff_sex,
            </if>
            <if test="staffAge != null">
                staff_age,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="staffAccount != null">
                #{staffAccount},
            </if>
            <if test="staffPassword != null">
                #{staffPassword},
            </if>
            <if test="staffStatus != null">
                #{staffStatus},
            </if>
            <if test="staffName != null">
                #{staffName},
            </if>
            <if test="staffSex != null">
                #{staffSex},
            </if>
            <if test="staffAge != null">
                #{staffAge},
            </if>
        </trim>
    </insert>

    <delete id="removeById" parameterType="int">
        delete from staff
        <where>
            staff_id = #{staffId}
        </where>
    </delete>

    <update id="update" parameterType="com.m.model.Staff">
        update staff
        <set>
            <if test="staffAccount != null">
                staff_account = #{staffAccount},
            </if>
            <if test="staffPassword != null">
                staff_password = #{staffPassword},
            </if>
            <if test="staffStatus != null">
                staff_status = #{staffStatus},
            </if>
            <if test="staffName != null">
                staff_name = #{staffName},
            </if>
            <if test="staffSex != null">
                staff_sex = #{staffSex},
            </if>
            <if test="staffAge != null">
                staff_age = #{staffAge},
            </if>
        </set>
        <where>
            staff_id = #{staffId}
        </where>
    </update>

    <update id="changePassword" parameterType="com.m.dto.User">
        update staff
        set staff_password = #{passWord}
        where staff_id = #{Id}
    </update>

    <update id="changeStatus" parameterType="map">
        update staff
        set staff_status = #{state}
        where staff_id = #{Id}
    </update>

    <select id="getById" parameterType="int" resultMap="staffMap">
        select
        <include refid="staff_column" />
        from staff
        <where>
            staff_id = #{staffId}
        </where>
    </select>

    <select id="getByAccount" parameterType="java.lang.String" resultMap="staffMap">
        select
        <include refid="staff_column" />
        from staff
        <where>
            staff_account = #{staffAccount}
        </where>
    </select>

    <select id="loadAll" parameterType="map" resultMap="staffMap">
        select
        <include refid="staff_column" />
        from staff
    </select>
    <select id="getByKey" parameterType="java.lang.String" resultMap="staffMap">
        select
        <include refid="staff_column" />
        from staff
        where staff_name like "%"#{name}"%"
    </select>
</mapper>